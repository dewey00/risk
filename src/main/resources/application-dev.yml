server:
  port: 8000
spring:
  application:
    name: iapi-drools-dev
  data:
    mongodb:
#      mongodb://user:secret@mongo1.example.com:12345,mongo2.example.com:23456/test
#      uri: mongodb://192.168.99.103:27018/iapiData
      uri: mongodb://192.168.3.155:27017/iapi1
  redis:
    # Redis 数据库索引（默认为0）
    database: 0
    # Redis 服务器地址
    host: localhost
    # Redis 服务器端口
    port: 6379
    # Redis 连接密码（默认为空）
    password:
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
    # 连接超时时间（毫秒）
    timeout: 0

  elasticsearch:
    jest:
      uris: http://localhost:9200
#      uris: http://192.168.99.103:9200
      username: elastic
      password: q123456
#      read-timeout: 10000 #读取超时
#      connection-timeout: 10000 #连接超时
# zookeeper  动态模型配置
curator:
  #重试次数
  retryCount: 5
  #重试间隔时间
  elapsedTimeMs: 5000
  # zookeeper 地址
#  connectString: 192.168.99.103:2181,192.168.99.108:2181,192.168.99.112:2181
#  connectString: 192.168.99.103:2181
  connectString: 192.168.3.155:2181

  # session 超时时间
  sessionTimeoutMs: 60000
  # 连接超时时间
  connectionTimeoutMs: 5000
  # 是否使用本地rules
  zkEnabled: true
  # 是否是测试环境
  zkTestEnabled: true
  # 分布式锁路径
  lockPath: devLock
  # 分布式锁路径
  lockTestPath: lockTest
  # 版本
  version: 1.0.0;
  # 模型节点 前缀
  zkPrefixNodePath: droolsRulesGroups
  # 模型节点 测试 前缀
  zkPrefixNodeTestPath:  droolsRulesTest
  # 节点测试规则
  zkNodeTestValue: 0
  # 系统环境变量规则
  prefixDir: drools.prefixDir

